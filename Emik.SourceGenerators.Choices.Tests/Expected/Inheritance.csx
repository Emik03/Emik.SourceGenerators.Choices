// <auto-generated/>
// ReSharper disable RedundantNameQualifier
// ReSharper disable once CheckNamespace
#nullable enable
#pragma warning disable
namespace Emik
{
    namespace SourceGenerators
    {
        namespace Choices
        {
            namespace Tests
            {
                /// <inheritdoc cref="Emik.SourceGenerators.Choices.Tests.Inheritance"/>
                /// <remarks>
                ///     <para>
                ///         The type <see cref="Emik.SourceGenerators.Choices.Tests.Inheritance"/>
                ///         is an immutable disjoint union representing the following variants:
                ///     </para>
                ///     <list type="table">
                ///         <listheader>
                ///             <term>
                ///                 <c>Name</c> <see langword="as"/> <c>Type</c>
                ///                 <list type="bullet">
                ///                     <item>
                ///                         <description>
                ///                             Predicate
                ///                         </description>
                ///                     </item>
                ///                     <item>
                ///                         <description>
                ///                             Factories
                ///                         </description>
                ///                     </item>
                ///                 </list>
                ///             </term>
                ///         </listheader>
                ///         <item>
                ///             <term>
                ///                 <see cref="First"/> <see langword="as"/> <see cref="System.ComponentModel.ComponentConverter"/>
                ///                 <list type="bullet">
                ///                     <item>
                ///                         <description>
                ///                             <see cref="IsFirst"/>
                ///                         </description>
                ///                     </item>
                ///                     <item>
                ///                         <description>
                ///                             <list type="number">
                ///                                 <item>
                ///                                     <description>
                ///                                         <see cref="OfFirst(System.ComponentModel.ComponentConverter)"/>
                ///                                     </description>
                ///                                 </item>
                ///                                 <item>
                ///                                     <description>
                ///                                         <see cref="Emik.SourceGenerators.Choices.Tests.Inheritance(System.ComponentModel.ComponentConverter)"/>
                ///                                     </description>
                ///                                 </item>
                ///                                 <item>
                ///                                     <description>
                ///                                         <see cref="op_Implicit(System.ComponentModel.ComponentConverter)"/>
                ///                                     </description>
                ///                                 </item>
                ///                             </list>
                ///                         </description>
                ///                     </item>
                ///                 </list>
                ///             </term>
                ///         </item>
                ///         <item>
                ///             <term>
                ///                 <see cref="Second"/> <see langword="as"/> <see cref="System.ComponentModel.CollectionConverter"/>
                ///                 <list type="bullet">
                ///                     <item>
                ///                         <description>
                ///                             <see cref="IsSecond"/>
                ///                         </description>
                ///                     </item>
                ///                     <item>
                ///                         <description>
                ///                             <list type="number">
                ///                                 <item>
                ///                                     <description>
                ///                                         <see cref="OfSecond(System.ComponentModel.CollectionConverter)"/>
                ///                                     </description>
                ///                                 </item>
                ///                                 <item>
                ///                                     <description>
                ///                                         <see cref="Emik.SourceGenerators.Choices.Tests.Inheritance(System.ComponentModel.CollectionConverter)"/>
                ///                                     </description>
                ///                                 </item>
                ///                                 <item>
                ///                                     <description>
                ///                                         <see cref="op_Implicit(System.ComponentModel.CollectionConverter)"/>
                ///                                     </description>
                ///                                 </item>
                ///                             </list>
                ///                         </description>
                ///                     </item>
                ///                 </list>
                ///             </term>
                ///         </item>
                ///     </list>
                /// </remarks>
                [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Auto)]
                partial struct Inheritance :
                    global::System.IComparable,
                    global::System.IComparable<object>,
                    global::System.IComparable<global::Emik.SourceGenerators.Choices.Tests.Inheritance>,
#if NET7_0_OR_GREATER
                    global::System.Numerics.IComparisonOperators<global::Emik.SourceGenerators.Choices.Tests.Inheritance, global::Emik.SourceGenerators.Choices.Tests.Inheritance, bool>,
#endif
                    global::System.IEquatable<object>,
                    global::System.IEquatable<global::Emik.SourceGenerators.Choices.Tests.Inheritance>
                {
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
                    private static class Choice
                    {
                        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
                        internal static class First<TFirstDiscard>
                        {
                            [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
                            internal sealed class Second<TSecondDiscard> : global::System.Attribute
                            {
                            }
                        }
                    }

                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    private readonly byte Discriminator
                    {
                        [global::System.Diagnostics.Contracts.PureAttribute]
                        [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                        get => _reference switch
                        {
                            System.ComponentModel.ComponentConverter => 0,
                            _ => 1,
                        };
                        [global::System.Diagnostics.Contracts.PureAttribute]
                        [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                        set { /* Intentionally left blank. */ }
                    }

                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    private readonly System.ComponentModel.TypeConverter? _reference;

                    /// <summary>
                    /// Initializes a new instance of the <see cref="Emik.SourceGenerators.Choices.Tests.Inheritance"/> struct with the variant <see cref="First"/> of type <see cref="System.ComponentModel.ComponentConverter"/>.
                    /// </summary>
                    /// <param name="first">The variant.</param>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public Inheritance(System.ComponentModel.ComponentConverter first)
                    {
                        Discriminator = 0;
                        _reference = first;
                    }

                    /// <summary>
                    /// Initializes a new instance of the <see cref="Emik.SourceGenerators.Choices.Tests.Inheritance"/> struct with the variant <see cref="Second"/> of type <see cref="System.ComponentModel.CollectionConverter"/>.
                    /// </summary>
                    /// <param name="second">The variant.</param>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public Inheritance(System.ComponentModel.CollectionConverter second)
                    {
                        Discriminator = 1;
                        _reference = second;
                    }

                    /// <summary>
                    /// Gets the value determining if the <see cref="Emik.SourceGenerators.Choices.Tests.Inheritance"/> is the variant <see cref="First"/> of type <see cref="System.ComponentModel.ComponentConverter"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    public readonly bool IsFirst
                    {
                        [global::System.Diagnostics.Contracts.PureAttribute]
                        [global::System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute(true, "First")]
                        [global::System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute(false, "Second")]
                        [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                        get => Discriminator is 0;
                    }

                    /// <summary>
                    /// Gets the value determining if the <see cref="Emik.SourceGenerators.Choices.Tests.Inheritance"/> is the variant <see cref="Second"/> of type <see cref="System.ComponentModel.CollectionConverter"/>.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    public readonly bool IsSecond
                    {
                        [global::System.Diagnostics.Contracts.PureAttribute]
                        [global::System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute(true, "Second")]
                        [global::System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute(false, "First")]
                        [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                        get => Discriminator is 1;
                    }

                    /// <summary>
                    /// Gets the <see cref="System.ComponentModel.ComponentConverter"/> variant.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    public readonly System.ComponentModel.ComponentConverter? First
                    {
                        [global::System.Diagnostics.Contracts.PureAttribute]
                        [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                        get => Discriminator is 0 ? (System.ComponentModel.ComponentConverter)_reference! : default;
                    }

                    /// <summary>
                    /// Gets the <see cref="System.ComponentModel.CollectionConverter"/> variant.
                    /// </summary>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    public readonly System.ComponentModel.CollectionConverter? Second
                    {
                        [global::System.Diagnostics.Contracts.PureAttribute]
                        [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                        get => Discriminator is 1 ? (System.ComponentModel.CollectionConverter)_reference! : default;
                    }

                    /// <summary>
                    /// Implicitly converts the <see cref="System.ComponentModel.ComponentConverter"/> parameter to the union.
                    /// </summary>
                    /// <param name="first">The parameter to pass onto the constructor.</param>
                    /// <returns>The union containing the parameter <paramref name="first"/>.</returns>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public static implicit operator global::Emik.SourceGenerators.Choices.Tests.Inheritance(System.ComponentModel.ComponentConverter first)
                        => new global::Emik.SourceGenerators.Choices.Tests.Inheritance(first);

                    /// <summary>
                    /// Explicitly converts the union to the target type <see cref="System.ComponentModel.ComponentConverter"/>.
                    /// </summary>
                    /// <param name="x">The union to access its property.</param>
                    /// <returns>The getter of the union <paramref name="x"/>.</returns>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public static explicit operator System.ComponentModel.ComponentConverter?(global::Emik.SourceGenerators.Choices.Tests.Inheritance x)
                        => x.First;

                    /// <summary>
                    /// Implicitly converts the <see cref="System.ComponentModel.CollectionConverter"/> parameter to the union.
                    /// </summary>
                    /// <param name="second">The parameter to pass onto the constructor.</param>
                    /// <returns>The union containing the parameter <paramref name="second"/>.</returns>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public static implicit operator global::Emik.SourceGenerators.Choices.Tests.Inheritance(System.ComponentModel.CollectionConverter second)
                        => new global::Emik.SourceGenerators.Choices.Tests.Inheritance(second);

                    /// <summary>
                    /// Explicitly converts the union to the target type <see cref="System.ComponentModel.CollectionConverter"/>.
                    /// </summary>
                    /// <param name="x">The union to access its property.</param>
                    /// <returns>The getter of the union <paramref name="x"/>.</returns>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public static explicit operator System.ComponentModel.CollectionConverter?(global::Emik.SourceGenerators.Choices.Tests.Inheritance x)
                        => x.Second;

                    /// <summary>
                    /// Creates a new instance of the <see cref="Emik.SourceGenerators.Choices.Tests.Inheritance"/> struct with the variant <see cref="First"/> of type <see cref="System.ComponentModel.ComponentConverter"/>.
                    /// </summary>
                    /// <param name="first">The value to pass into the type.</param>
                    /// <returns>The union containing the parameter <paramref name="first"/>.</returns>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public static global::Emik.SourceGenerators.Choices.Tests.Inheritance OfFirst(System.ComponentModel.ComponentConverter first)
                        => new global::Emik.SourceGenerators.Choices.Tests.Inheritance(first);

                    /// <summary>
                    /// Creates a new instance of the <see cref="Emik.SourceGenerators.Choices.Tests.Inheritance"/> struct with the variant <see cref="Second"/> of type <see cref="System.ComponentModel.CollectionConverter"/>.
                    /// </summary>
                    /// <param name="second">The value to pass into the type.</param>
                    /// <returns>The union containing the parameter <paramref name="second"/>.</returns>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public static global::Emik.SourceGenerators.Choices.Tests.Inheritance OfSecond(System.ComponentModel.CollectionConverter second)
                        => new global::Emik.SourceGenerators.Choices.Tests.Inheritance(second);

                    /// <summary>
                    /// Determines whether the left-hand side is equal to the right.
                    /// </summary>
                    /// <param name="left">The left-hand side.</param>
                    /// <param name="right">The right-hand side.</param>
                    /// <returns>
                    /// The value determining whether the parameter <paramref name="left"/>
                    /// is equal to the parameter <paramref name="right"/>.
                    /// </returns>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public static bool operator ==(Emik.SourceGenerators.Choices.Tests.Inheritance left, Emik.SourceGenerators.Choices.Tests.Inheritance right)
                        => left.Discriminator == right.Discriminator &&
                            left.Discriminator switch
                            {
                                0 => global::System.Collections.Generic.EqualityComparer<System.ComponentModel.ComponentConverter>.Default.Equals(((System.ComponentModel.ComponentConverter)left._reference!), ((System.ComponentModel.ComponentConverter)right._reference!)),
                                _ => global::System.Collections.Generic.EqualityComparer<System.ComponentModel.CollectionConverter>.Default.Equals(((System.ComponentModel.CollectionConverter)left._reference!), ((System.ComponentModel.CollectionConverter)right._reference!)),
                            };

                    /// <summary>
                    /// Determines whether the left-hand side is unequal to the right.
                    /// </summary>
                    /// <param name="left">The left-hand side.</param>
                    /// <param name="right">The right-hand side.</param>
                    /// <returns>
                    /// The value determining whether the parameter <paramref name="left"/>
                    /// is unequal to the parameter <paramref name="right"/>.
                    /// </returns>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public static bool operator !=(Emik.SourceGenerators.Choices.Tests.Inheritance left, Emik.SourceGenerators.Choices.Tests.Inheritance right)
                        => !(left == right);

                    /// <summary>
                    /// Determines whether the left-hand side is greater than the right.
                    /// </summary>
                    /// <param name="left">The left-hand side.</param>
                    /// <param name="right">The right-hand side.</param>
                    /// <returns>
                    /// The value determining whether the parameter <paramref name="left"/>
                    /// is greater than the parameter <paramref name="right"/>.
                    /// </returns>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public static bool operator >(Emik.SourceGenerators.Choices.Tests.Inheritance left, Emik.SourceGenerators.Choices.Tests.Inheritance right)
                        => left.Discriminator > right.Discriminator ||
                            left.Discriminator == right.Discriminator &&
                            left.Discriminator switch
                            {
                                0 => global::System.Collections.Generic.Comparer<System.ComponentModel.ComponentConverter>.Default.Compare(((System.ComponentModel.ComponentConverter)left._reference!), ((System.ComponentModel.ComponentConverter)right._reference!)) > 0,
                                _ => global::System.Collections.Generic.Comparer<System.ComponentModel.CollectionConverter>.Default.Compare(((System.ComponentModel.CollectionConverter)left._reference!), ((System.ComponentModel.CollectionConverter)right._reference!)) > 0,
                            };

                    /// <summary>
                    /// Determines whether the left-hand side is greater than or equal to the right.
                    /// </summary>
                    /// <param name="left">The left-hand side.</param>
                    /// <param name="right">The right-hand side.</param>
                    /// <returns>
                    /// The value determining whether the parameter <paramref name="left"/>
                    /// is greater than or equal to the parameter <paramref name="right"/>.
                    /// </returns>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public static bool operator >=(Emik.SourceGenerators.Choices.Tests.Inheritance left, Emik.SourceGenerators.Choices.Tests.Inheritance right)
                        => left == right || left > right;

                    /// <summary>
                    /// Determines whether the left-hand side is less than the right.
                    /// </summary>
                    /// <param name="left">The left-hand side.</param>
                    /// <param name="right">The right-hand side.</param>
                    /// <returns>
                    /// The value determining whether the parameter <paramref name="left"/>
                    /// is less than the parameter <paramref name="right"/>.
                    /// </returns>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public static bool operator <(Emik.SourceGenerators.Choices.Tests.Inheritance left, Emik.SourceGenerators.Choices.Tests.Inheritance right)
                        => right > left;

                    /// <summary>
                    /// Determines whether the left-hand side is less than or equal to the right.
                    /// </summary>
                    /// <param name="left">The left-hand side.</param>
                    /// <param name="right">The right-hand side.</param>
                    /// <returns>
                    /// The value determining whether the parameter <paramref name="left"/>
                    /// is less than or equal to the parameter <paramref name="right"/>.
                    /// </returns>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public static bool operator <=(Emik.SourceGenerators.Choices.Tests.Inheritance left, Emik.SourceGenerators.Choices.Tests.Inheritance right)
                        => right >= left;

                    /// <inheritdoc cref="object.Equals(object)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public override bool Equals(object? obj)
                        => obj is global::Emik.SourceGenerators.Choices.Tests.Inheritance x && Equals(x);

                    /// <inheritdoc />
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public readonly bool Equals(Emik.SourceGenerators.Choices.Tests.Inheritance other)
                        => this == other;

                    /// <inheritdoc cref="IComparable.CompareTo(object)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public readonly int CompareTo(object? obj)
                        => obj is null ? 1 : obj is global::Emik.SourceGenerators.Choices.Tests.Inheritance x ? CompareTo(x) : -1;

                    /// <inheritdoc />
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public readonly int CompareTo(Emik.SourceGenerators.Choices.Tests.Inheritance other)
                        => Equals(other) ? 0 : -1;

                    /// <inheritdoc />
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public readonly override int GetHashCode()
                        => unchecked(Discriminator * 12329) ^
                        (Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).GetHashCode(),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).GetHashCode(),
                        });

                    /// <inheritdoc />
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public readonly override string ToString()
                        => Discriminator switch
                        {
                            0 => $"{nameof(First)}({((System.ComponentModel.ComponentConverter)_reference!)})",
                            _ => $"{nameof(Second)}({((System.ComponentModel.CollectionConverter)_reference!)})",
                        };

                    /// <summary>
                    /// Invokes the callback based on current variance.
                    /// </summary>
                    /// <param name="onFirst">The callback to use when the contract of the <see cref="Emik.SourceGenerators.Choices.Tests.Inheritance"/> struct with the variant <see cref="First"/> of type <see cref="System.ComponentModel.ComponentConverter"/> is held.</param>
                    /// <param name="onSecond">The callback to use when the contract of the <see cref="Emik.SourceGenerators.Choices.Tests.Inheritance"/> struct with the variant <see cref="Second"/> of type <see cref="System.ComponentModel.CollectionConverter"/> is held.</param>
                    /// <returns>Itself.</returns>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public readonly Emik.SourceGenerators.Choices.Tests.Inheritance Map(
                        global::System.Action<System.ComponentModel.ComponentConverter>? onFirst = null,
                        global::System.Action<System.ComponentModel.CollectionConverter>? onSecond = null
                    )
                    {
                        switch (Discriminator)
                        {
                            case 0:
                                onFirst?.Invoke(((System.ComponentModel.ComponentConverter)_reference!));
                                return this;
                            default:
                                onSecond?.Invoke(((System.ComponentModel.CollectionConverter)_reference!));
                                return this;
                        }
                    }

                    /// <summary>
                    /// Maps each variant to <typeparamref name="TMappingResult"/>.
                    /// </summary>
                    /// <typeparam name="TMappingResult">The resulting type from the mapping.</typeparam>
                    /// <param name="onFirst">The callback to use when the contract of the <see cref="Emik.SourceGenerators.Choices.Tests.Inheritance"/> struct with the variant <see cref="First"/> of type <see cref="System.ComponentModel.ComponentConverter"/> is held.</param>
                    /// <param name="onSecond">The callback to use when the contract of the <see cref="Emik.SourceGenerators.Choices.Tests.Inheritance"/> struct with the variant <see cref="Second"/> of type <see cref="System.ComponentModel.CollectionConverter"/> is held.</param>
                    /// <returns>
                    /// The resulting value from one of the parameters based on the current state of the object.
                    /// </returns>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public readonly TMappingResult Map<TMappingResult>(
                        global::System.Func<System.ComponentModel.ComponentConverter, TMappingResult> onFirst,
                        global::System.Func<System.ComponentModel.CollectionConverter, TMappingResult> onSecond
                    )
                        => Discriminator switch
                        {
                            0 => onFirst(((System.ComponentModel.ComponentConverter)_reference!)),
                            _ => onSecond(((System.ComponentModel.CollectionConverter)_reference!)),
                        };

                    /// <summary>
                    /// Gets the underlying value.
                    /// </summary>
                    /// <returns>
                    /// The underlying value from this instance.
                    /// </returns>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Diagnostics.Contracts.PureAttribute]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public readonly System.ComponentModel.TypeConverter GetUnderlyingValue()
                        => (System.ComponentModel.TypeConverter)_reference!;

                    /// <inheritdoc cref="System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext?, object, System.Attribute[]?)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute("The Type of value cannot be statically discovered. The public parameterless constructor or the 'Default' static field may be trimmed from the Attribute's Type.")]
                    public System.ComponentModel.PropertyDescriptorCollection GetProperties(global::System.ComponentModel.ITypeDescriptorContext? context, object value, global::System.Attribute[]? attributes)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).GetProperties(context, value, attributes),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).GetProperties(context, value, attributes),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext?, System.Type)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public bool CanConvertFrom(global::System.ComponentModel.ITypeDescriptorContext? context, global::System.Type sourceType)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).CanConvertFrom(context, sourceType),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).CanConvertFrom(context, sourceType),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public bool CanConvertFrom(global::System.Type sourceType)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).CanConvertFrom(sourceType),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).CanConvertFrom(sourceType),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext?, System.Type?)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public bool CanConvertTo(global::System.ComponentModel.ITypeDescriptorContext? context, [System.Diagnostics.CodeAnalysis.NotNullWhenAttribute(true)] global::System.Type? destinationType)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).CanConvertTo(context, destinationType),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).CanConvertTo(context, destinationType),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.CanConvertTo(System.Type?)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public bool CanConvertTo([System.Diagnostics.CodeAnalysis.NotNullWhenAttribute(true)] global::System.Type? destinationType)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).CanConvertTo(destinationType),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).CanConvertTo(destinationType),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext?, System.Globalization.CultureInfo?, object)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public object? ConvertFrom(global::System.ComponentModel.ITypeDescriptorContext? context, global::System.Globalization.CultureInfo? culture, object value)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).ConvertFrom(context, culture, value),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).ConvertFrom(context, culture, value),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.ConvertFrom(object)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public object? ConvertFrom(object value)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).ConvertFrom(value),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).ConvertFrom(value),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext?, string)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public object? ConvertFromInvariantString(global::System.ComponentModel.ITypeDescriptorContext? context, string text)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).ConvertFromInvariantString(context, text),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).ConvertFromInvariantString(context, text),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public object? ConvertFromInvariantString(string text)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).ConvertFromInvariantString(text),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).ConvertFromInvariantString(text),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext?, System.Globalization.CultureInfo?, string)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public object? ConvertFromString(global::System.ComponentModel.ITypeDescriptorContext? context, global::System.Globalization.CultureInfo? culture, string text)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).ConvertFromString(context, culture, text),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).ConvertFromString(context, culture, text),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext?, string)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public object? ConvertFromString(global::System.ComponentModel.ITypeDescriptorContext? context, string text)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).ConvertFromString(context, text),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).ConvertFromString(context, text),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.ConvertFromString(string)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public object? ConvertFromString(string text)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).ConvertFromString(text),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).ConvertFromString(text),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext?, System.Globalization.CultureInfo?, object?, System.Type)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public object? ConvertTo(global::System.ComponentModel.ITypeDescriptorContext? context, global::System.Globalization.CultureInfo? culture, object? value, global::System.Type destinationType)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).ConvertTo(context, culture, value, destinationType),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).ConvertTo(context, culture, value, destinationType),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.ConvertTo(object?, System.Type)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public object? ConvertTo(object? value, global::System.Type destinationType)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).ConvertTo(value, destinationType),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).ConvertTo(value, destinationType),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext?, object?)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public string? ConvertToInvariantString(global::System.ComponentModel.ITypeDescriptorContext? context, object? value)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).ConvertToInvariantString(context, value),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).ConvertToInvariantString(context, value),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.ConvertToInvariantString(object?)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public string? ConvertToInvariantString(object? value)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).ConvertToInvariantString(value),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).ConvertToInvariantString(value),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext?, System.Globalization.CultureInfo?, object?)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public string? ConvertToString(global::System.ComponentModel.ITypeDescriptorContext? context, global::System.Globalization.CultureInfo? culture, object? value)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).ConvertToString(context, culture, value),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).ConvertToString(context, culture, value),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext?, object?)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public string? ConvertToString(global::System.ComponentModel.ITypeDescriptorContext? context, object? value)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).ConvertToString(context, value),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).ConvertToString(context, value),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.ConvertToString(object?)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public string? ConvertToString(object? value)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).ConvertToString(value),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).ConvertToString(value),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public object? CreateInstance(global::System.Collections.IDictionary propertyValues)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).CreateInstance(propertyValues),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).CreateInstance(propertyValues),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext?, System.Collections.IDictionary)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public object? CreateInstance(global::System.ComponentModel.ITypeDescriptorContext? context, global::System.Collections.IDictionary propertyValues)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).CreateInstance(context, propertyValues),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).CreateInstance(context, propertyValues),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.GetCreateInstanceSupported()"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public bool GetCreateInstanceSupported()
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).GetCreateInstanceSupported(),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).GetCreateInstanceSupported(),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext?)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public bool GetCreateInstanceSupported(global::System.ComponentModel.ITypeDescriptorContext? context)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).GetCreateInstanceSupported(context),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).GetCreateInstanceSupported(context),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext?, object)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute("The Type of value cannot be statically discovered.")]
                    public System.ComponentModel.PropertyDescriptorCollection? GetProperties(global::System.ComponentModel.ITypeDescriptorContext? context, object value)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).GetProperties(context, value),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).GetProperties(context, value),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.GetProperties(object)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute("The Type of value cannot be statically discovered.")]
                    public System.ComponentModel.PropertyDescriptorCollection? GetProperties(object value)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).GetProperties(value),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).GetProperties(value),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.GetPropertiesSupported()"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public bool GetPropertiesSupported()
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).GetPropertiesSupported(),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).GetPropertiesSupported(),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext?)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public bool GetPropertiesSupported(global::System.ComponentModel.ITypeDescriptorContext? context)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).GetPropertiesSupported(context),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).GetPropertiesSupported(context),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.GetStandardValues()"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public System.Collections.ICollection? GetStandardValues()
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).GetStandardValues(),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).GetStandardValues(),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext?)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public System.ComponentModel.TypeConverter.StandardValuesCollection? GetStandardValues(global::System.ComponentModel.ITypeDescriptorContext? context)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).GetStandardValues(context),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).GetStandardValues(context),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.GetStandardValuesExclusive()"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public bool GetStandardValuesExclusive()
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).GetStandardValuesExclusive(),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).GetStandardValuesExclusive(),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext?)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public bool GetStandardValuesExclusive(global::System.ComponentModel.ITypeDescriptorContext? context)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).GetStandardValuesExclusive(context),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).GetStandardValuesExclusive(context),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.GetStandardValuesSupported()"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public bool GetStandardValuesSupported()
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).GetStandardValuesSupported(),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).GetStandardValuesSupported(),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext?)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public bool GetStandardValuesSupported(global::System.ComponentModel.ITypeDescriptorContext? context)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).GetStandardValuesSupported(context),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).GetStandardValuesSupported(context),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext?, object?)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public bool IsValid(global::System.ComponentModel.ITypeDescriptorContext? context, object? value)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).IsValid(context, value),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).IsValid(context, value),
                        };

                    /// <inheritdoc cref="System.ComponentModel.TypeConverter.IsValid(object)"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public bool IsValid(object value)
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).IsValid(value),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).IsValid(value),
                        };

                    /// <inheritdoc cref="object.GetType()"/>
                    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Emik.SourceGenerators.Choices", "1.4.10.0")]
                    [global::System.Runtime.CompilerServices.MethodImplAttribute(256)]
                    public System.Type GetUnderlyingType()
                        => Discriminator switch
                        {
                            0 => ((System.ComponentModel.ComponentConverter)_reference!).GetType(),
                            _ => ((System.ComponentModel.CollectionConverter)_reference!).GetType(),
                        };
                }
            }
        }
    }
}
